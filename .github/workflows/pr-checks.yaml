name: Pull Request Checks

on: [pull_request]

jobs:
  pr-checks:
    name: Build, Lint, & Test
    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: beetle-test
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.24.0"
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Swagger Docs Build
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          make swag
      - name: Compile
        run: make compile
      - name: Check Formatting
        run: make fmt-check
      - name: Check go-vet
        run: make vet
      - name: Staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          make staticcheck
      - name: Run tests
        run: make test
      - name: Test & gen cov report
        run: make coverage-report
      - name: Check coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coveragereport.out | grep total | awk '{print $3}' | sed 's/%//')
          # TODO: Update threshold
          if (( $(echo "$COVERAGE < 30" | bc -l) )); then
            echo "Coverage is below 30%: $COVERAGE%"
            exit 1
          fi
      - name: Upload coverage report
        uses: actions/upload-artifact@v4.3.3
        with:
          name: coverage-report
          path: coveragereport.out
  goose-checks:
    name: Goose Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./.github/workflows/scripts
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Make the script files executable
        run: chmod +x goosecheck.sh
      - name: Check Goose Migrations
        run: |
          ./goosecheck.sh
