package router

import (
	_ "beetle/docs" // Generated by `swag init`
	"beetle/internal/config"

	"github.com/labstack/echo/v4"
)

type routeProvider interface {
	AddPublicRoutes(g *echo.Group, config config.Config)
	AddPrivateRoutes(g *echo.Group, config config.Config)
}

type Router struct {
	RouteProviders []routeProvider
	Config         config.Config
}

func New(config config.Config) *Router {
	return &Router{
		RouteProviders: []routeProvider{
			&tokenRouteProvider{},
			&healthcheckRouteProvider{},
			&userRouteProvider{},
		},
		Config: config,
	}
}

// AddRoutes adds all routes to the Echo instance
func (r *Router) AddRoutes(e *echo.Echo, authMiddlewares ...echo.MiddlewareFunc) {
	v1public := e.Group("/v1")
	v1private := e.Group("/v1", authMiddlewares...)

	// Add public routes
	for _, rp := range r.RouteProviders {
		rp.AddPublicRoutes(v1public, r.Config)
	}

	// Add private routes
	for _, rp := range r.RouteProviders {
		rp.AddPrivateRoutes(v1private, r.Config)
	}

	AddSwaggerRoutes(e, r.Config)
}
